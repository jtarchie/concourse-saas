#!/usr/bin/env ruby

require 'yaml'
require_relative '../app/models/atc_endpoint'
require_relative '../app/pipelines/main'
require_relative '../app/presenters/repo'
require_relative '../app/repositories/repos'
require_relative '../app/validators/has_pipeline'

uri, username, password = *ARGV

if [uri, username, password].any?(&:nil?)
  warn 'usage: ./bin/generate-pipeline <uri> <username> <password>'
  exit 1
end

source = Models::Repo.new(uri: 'https://github.com/jtarchie/concourse-saas')
atc_endpoint = Models::ATCEndpoint.new(
  uri: uri,
  username: username,
  password: password
)

repos = Repositories::Repos.all
repos.each do |repo|
  validator = Validators::HasPipeline.new(repo: repo)
  fail "Repo (#{repo.uri}) is not valid" unless validator.valid?
end

manifest = Pipeline::Main.new(
  repos: repos.collect { |r| Presenters::Repo.new(r) },
  source: Presenters::Repo.new(source),
  atc_endpoint: atc_endpoint
)

puts manifest.to_h.to_yaml
